/// <reference types="node" />
import type { IDestinationProvider, IMetadata, ProviderType } from '../../types';
import { Duplex } from 'stream';
interface ILocalStrapiDestinationProviderOptions {
    getStrapi(): Promise<Strapi.Strapi>;
}
export declare const createLocalStrapiDestinationProvider: (options: ILocalStrapiDestinationProviderOptions) => LocalStrapiDestinationProvider;
declare class LocalStrapiDestinationProvider implements IDestinationProvider {
    name: string;
    type: ProviderType;
    options: ILocalStrapiDestinationProviderOptions;
    strapi?: Strapi.Strapi;
    constructor(options: ILocalStrapiDestinationProviderOptions);
    bootstrap(): Promise<void>;
    close(): Promise<void>;
    getMetadata(): IMetadata | Promise<IMetadata>;
    getSchemas(): {
        [x: string]: Partial<any>;
    };
    getEntitiesStream(): Duplex;
}
export {};
