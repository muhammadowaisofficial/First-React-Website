/// <reference types="node" />
import type { IMetadata, ISourceProvider, ProviderType } from '../../../types';
export interface ILocalStrapiSourceProviderOptions {
    getStrapi(): Strapi.Strapi | Promise<Strapi.Strapi>;
    autoDestroy?: boolean;
}
export declare const createLocalStrapiSourceProvider: (options: ILocalStrapiSourceProviderOptions) => LocalStrapiSourceProvider;
declare class LocalStrapiSourceProvider implements ISourceProvider {
    name: string;
    type: ProviderType;
    options: ILocalStrapiSourceProviderOptions;
    strapi?: Strapi.Strapi;
    constructor(options: ILocalStrapiSourceProviderOptions);
    bootstrap(): Promise<void>;
    close(): Promise<void>;
    getMetadata(): IMetadata;
    streamEntities(): Promise<NodeJS.ReadableStream>;
    streamLinks(): NodeJS.ReadableStream;
    streamConfiguration(): NodeJS.ReadableStream;
    getSchemas(): {
        [x: string]: Partial<any>;
    };
    streamSchemas(): NodeJS.ReadableStream;
}
export declare type ILocalStrapiSourceProvider = InstanceType<typeof LocalStrapiSourceProvider>;
export {};
