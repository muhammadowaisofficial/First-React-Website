"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createLinksStream = void 0;
const stream_1 = require("stream");
const fp_1 = require("lodash/fp");
const utils_1 = require("./utils");
/**
 * Create a Duplex instance which will stream all the links from a Strapi instance
 */
const createLinksStream = (strapi) => {
    const schemas = Object.values(strapi.contentTypes);
    // Destroy the Duplex stream instance
    const destroy = () => {
        if (!stream.destroyed) {
            stream.destroy();
        }
    };
    // Async generator stream that returns every link from a Strapi instance
    const stream = stream_1.Readable.from((async function* () {
        for (const schema of schemas) {
            const populate = (0, utils_1.getDeepPopulateQuery)(schema, strapi);
            const query = { fields: ['id'], populate };
            // TODO: Replace with the DB stream API
            const results = await strapi.entityService.findMany(schema.uid, query);
            for (const entity of (0, fp_1.castArray)(results)) {
                const links = (0, utils_1.parseEntityLinks)(entity, populate, schema, strapi);
                for (const link of links) {
                    yield link;
                }
            }
        }
        destroy();
    })());
    return stream;
};
exports.createLinksStream = createLinksStream;
//# sourceMappingURL=index.js.map